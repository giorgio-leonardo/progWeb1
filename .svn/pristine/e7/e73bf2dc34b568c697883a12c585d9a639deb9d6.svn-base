/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package support;

import db.DbManager;
import db.Groups;
import db.Invite;
import db.User;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.sql.Clob;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;

/**
 *
 * @author giorgio
 */
public class Utils extends HttpServlet
{
    private static final org.apache.log4j.Logger log = Logger.getLogger(Utils.class);
    public static final String gridBgColor = "#c0c0c0";
      
    public static String dateToString(Date date)
    {
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        if (date != null)
            return df.format(date);
        else
            return null;
    }
    
    public static String convertTimeStamp(Timestamp ts)
    {
        String s = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(ts);
        return s;
    }

    public static String parsePostText(String postText)
    {
        String ret = "";
        
        return ret;
    }
    
    public static void toLog(String message, String level)
    {
        level = level.toLowerCase();
        PropertyConfigurator.configure(Utils.class.getClassLoader().getResource("support/log4j.properties"));

        
        switch(level)
        {
            case "f":
                log.fatal(message);
                break;
            case "e":
                log.error(message);
                break;
            case "w":
                log.warn(message);
                break;
            case "i":
                log.info(message);
                break;
            case "d":
                log.debug(message);
                break;
        }
    }
 
   
    
    public static void createGroupFolder(String path, String groupName)
    {
        JOptionPane.showMessageDialog(null, path + "/" + groupName);
        File dir = new File(path + "/" + groupName);
        dir.mkdir();
    }
    
    public static String convertClob(Clob cl) throws SQLException 
    {
        Reader stream = cl.getCharacterStream();
        BufferedReader reader = new BufferedReader(stream);
        StringBuffer sb = new StringBuffer();
        String line = null;
        try
        {
            while ((line=reader.readLine())!=null)
            {
                sb.append(line);
            }
            stream.close();
        }
        catch (IOException ex)
        {
            java.util.logging.Logger.getLogger(Utils.class.getName()).log(Level.SEVERE, null, ex);
        }
        
   
        if (sb.length()>0)
        {
            return sb.toString();
        }
   
        return "";
    }
  
}
